/**
 * Autogenerated by Thrift for storage.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#pragma once

#include <thrift/lib/cpp2/gen/module_metadata_h.h>
#include "storage_types.h"
#include "common_metadata.h"
#include "meta_metadata.h"

namespace nebula {
namespace storage {
namespace cpp2 {
class GraphStorageServiceSvIf;
}}} // namespace nebula::storage::cpp2
namespace nebula {
namespace storage {
namespace cpp2 {
class StorageAdminServiceSvIf;
}}} // namespace nebula::storage::cpp2
namespace nebula {
namespace storage {
namespace cpp2 {
class GeneralStorageServiceSvIf;
}}} // namespace nebula::storage::cpp2
namespace nebula {
namespace storage {
namespace cpp2 {
class InternalStorageServiceSvIf;
}}} // namespace nebula::storage::cpp2

namespace apache {
namespace thrift {
namespace detail {
namespace md {

template <>
class EnumMetadata<::nebula::storage::cpp2::StatType> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class EnumMetadata<::nebula::storage::cpp2::OrderDirection> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class EnumMetadata<::nebula::storage::cpp2::EdgeDirection> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class EnumMetadata<::nebula::storage::cpp2::ScanType> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class EnumMetadata<::nebula::storage::cpp2::EngineSignType> {
 public:
  static void gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::RequestCommon> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::PartitionResult> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::ResponseCommon> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::StatProp> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::Expr> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::EdgeProp> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::VertexProp> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::OrderBy> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::TraverseSpec> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::GetNeighborsRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::GetNeighborsResponse> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::ExecResponse> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::GetPropRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::GetPropResponse> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::NewTag> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::NewVertex> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::EdgeKey> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::NewEdge> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::AddVerticesRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::AddEdgesRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::DeleteVerticesRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::DeleteEdgesRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::DelTags> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::DeleteTagsRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::UpdateResponse> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::UpdatedProp> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::UpdateVertexRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::UpdateEdgeRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::GetUUIDReq> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::GetUUIDResp> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::LookupIndexResp> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::IndexColumnHint> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::IndexQueryContext> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::IndexSpec> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::LookupIndexRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::LookupAndTraverseRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::ScanCursor> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::ScanVertexRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::ScanVertexResponse> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::ScanEdgeRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::ScanEdgeResponse> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::TaskPara> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::AddAdminTaskRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::StopAdminTaskRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::AdminExecResp> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::TransLeaderReq> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::AddPartReq> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::AddLearnerReq> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::RemovePartReq> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::MemberChangeReq> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::CatchUpDataReq> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::GetLeaderReq> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::CreateCPRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::DropCPRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::BlockingSignRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::GetLeaderPartsResp> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::CheckPeersReq> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::RebuildIndexRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::CreateCPResp> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::ListClusterInfoResp> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::ListClusterInfoReq> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::KVGetRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::KVGetResponse> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::KVPutRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::KVRemoveRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::InternalTxnRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::ChainAddEdgesRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class StructMetadata<::nebula::storage::cpp2::ChainUpdateEdgeRequest> {
 public:
  static const ::apache::thrift::metadata::ThriftStruct& gen(ThriftMetadata& metadata);
};
template <>
class ServiceMetadata<::nebula::storage::cpp2::GraphStorageServiceSvIf> {
 public:
  static void gen(ThriftMetadata& metadata, ThriftServiceContext& context);
 private:
  static void gen_getNeighbors(ThriftMetadata& metadata, ThriftService& context);
  static void gen_getProps(ThriftMetadata& metadata, ThriftService& context);
  static void gen_addVertices(ThriftMetadata& metadata, ThriftService& context);
  static void gen_addEdges(ThriftMetadata& metadata, ThriftService& context);
  static void gen_deleteEdges(ThriftMetadata& metadata, ThriftService& context);
  static void gen_deleteVertices(ThriftMetadata& metadata, ThriftService& context);
  static void gen_deleteTags(ThriftMetadata& metadata, ThriftService& context);
  static void gen_updateVertex(ThriftMetadata& metadata, ThriftService& context);
  static void gen_updateEdge(ThriftMetadata& metadata, ThriftService& context);
  static void gen_scanVertex(ThriftMetadata& metadata, ThriftService& context);
  static void gen_scanEdge(ThriftMetadata& metadata, ThriftService& context);
  static void gen_getUUID(ThriftMetadata& metadata, ThriftService& context);
  static void gen_lookupIndex(ThriftMetadata& metadata, ThriftService& context);
  static void gen_lookupAndTraverse(ThriftMetadata& metadata, ThriftService& context);
  static void gen_chainUpdateEdge(ThriftMetadata& metadata, ThriftService& context);
  static void gen_chainAddEdges(ThriftMetadata& metadata, ThriftService& context);
};
template <>
class ServiceMetadata<::nebula::storage::cpp2::StorageAdminServiceSvIf> {
 public:
  static void gen(ThriftMetadata& metadata, ThriftServiceContext& context);
 private:
  static void gen_transLeader(ThriftMetadata& metadata, ThriftService& context);
  static void gen_addPart(ThriftMetadata& metadata, ThriftService& context);
  static void gen_addLearner(ThriftMetadata& metadata, ThriftService& context);
  static void gen_removePart(ThriftMetadata& metadata, ThriftService& context);
  static void gen_memberChange(ThriftMetadata& metadata, ThriftService& context);
  static void gen_waitingForCatchUpData(ThriftMetadata& metadata, ThriftService& context);
  static void gen_createCheckpoint(ThriftMetadata& metadata, ThriftService& context);
  static void gen_dropCheckpoint(ThriftMetadata& metadata, ThriftService& context);
  static void gen_blockingWrites(ThriftMetadata& metadata, ThriftService& context);
  static void gen_rebuildTagIndex(ThriftMetadata& metadata, ThriftService& context);
  static void gen_rebuildEdgeIndex(ThriftMetadata& metadata, ThriftService& context);
  static void gen_getLeaderParts(ThriftMetadata& metadata, ThriftService& context);
  static void gen_checkPeers(ThriftMetadata& metadata, ThriftService& context);
  static void gen_addAdminTask(ThriftMetadata& metadata, ThriftService& context);
  static void gen_stopAdminTask(ThriftMetadata& metadata, ThriftService& context);
  static void gen_listClusterInfo(ThriftMetadata& metadata, ThriftService& context);
};
template <>
class ServiceMetadata<::nebula::storage::cpp2::GeneralStorageServiceSvIf> {
 public:
  static void gen(ThriftMetadata& metadata, ThriftServiceContext& context);
 private:
  static void gen_get(ThriftMetadata& metadata, ThriftService& context);
  static void gen_put(ThriftMetadata& metadata, ThriftService& context);
  static void gen_remove(ThriftMetadata& metadata, ThriftService& context);
};
template <>
class ServiceMetadata<::nebula::storage::cpp2::InternalStorageServiceSvIf> {
 public:
  static void gen(ThriftMetadata& metadata, ThriftServiceContext& context);
 private:
  static void gen_chainAddEdges(ThriftMetadata& metadata, ThriftService& context);
  static void gen_chainUpdateEdge(ThriftMetadata& metadata, ThriftService& context);
};
} // namespace md
} // namespace detail
} // namespace thrift
} // namespace apache
