/**
 * Autogenerated by Thrift for graph.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#include "graph_data.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

namespace apache {
namespace thrift {

const std::array<folly::StringPiece, 4> TStructDataStorage<::nebula::graph::cpp2::ProfilingStats>::fields_names = {{
  "rows",
  "exec_duration_in_us",
  "total_duration_in_us",
  "other_stats",
}};
const std::array<int16_t, 4> TStructDataStorage<::nebula::graph::cpp2::ProfilingStats>::fields_ids = {{
  1,
  2,
  3,
  4,
}};
const std::array<protocol::TType, 4> TStructDataStorage<::nebula::graph::cpp2::ProfilingStats>::fields_types = {{
  TType::T_I64,
  TType::T_I64,
  TType::T_I64,
  TType::T_MAP,
}};

const std::array<folly::StringPiece, 2> TStructDataStorage<::nebula::graph::cpp2::PlanNodeBranchInfo>::fields_names = {{
  "is_do_branch",
  "condition_node_id",
}};
const std::array<int16_t, 2> TStructDataStorage<::nebula::graph::cpp2::PlanNodeBranchInfo>::fields_ids = {{
  1,
  2,
}};
const std::array<protocol::TType, 2> TStructDataStorage<::nebula::graph::cpp2::PlanNodeBranchInfo>::fields_types = {{
  TType::T_BOOL,
  TType::T_I64,
}};

const std::array<folly::StringPiece, 2> TStructDataStorage<::nebula::graph::cpp2::Pair>::fields_names = {{
  "key",
  "value",
}};
const std::array<int16_t, 2> TStructDataStorage<::nebula::graph::cpp2::Pair>::fields_ids = {{
  1,
  2,
}};
const std::array<protocol::TType, 2> TStructDataStorage<::nebula::graph::cpp2::Pair>::fields_types = {{
  TType::T_STRING,
  TType::T_STRING,
}};

const std::array<folly::StringPiece, 7> TStructDataStorage<::nebula::graph::cpp2::PlanNodeDescription>::fields_names = {{
  "name",
  "id",
  "output_var",
  "description",
  "profiles",
  "branch_info",
  "dependencies",
}};
const std::array<int16_t, 7> TStructDataStorage<::nebula::graph::cpp2::PlanNodeDescription>::fields_ids = {{
  1,
  2,
  3,
  4,
  5,
  6,
  7,
}};
const std::array<protocol::TType, 7> TStructDataStorage<::nebula::graph::cpp2::PlanNodeDescription>::fields_types = {{
  TType::T_STRING,
  TType::T_I64,
  TType::T_STRING,
  TType::T_LIST,
  TType::T_LIST,
  TType::T_STRUCT,
  TType::T_LIST,
}};

const std::array<folly::StringPiece, 4> TStructDataStorage<::nebula::graph::cpp2::PlanDescription>::fields_names = {{
  "plan_node_descs",
  "node_index_map",
  "format",
  "optimize_time_in_us",
}};
const std::array<int16_t, 4> TStructDataStorage<::nebula::graph::cpp2::PlanDescription>::fields_ids = {{
  1,
  2,
  3,
  4,
}};
const std::array<protocol::TType, 4> TStructDataStorage<::nebula::graph::cpp2::PlanDescription>::fields_types = {{
  TType::T_LIST,
  TType::T_MAP,
  TType::T_STRING,
  TType::T_I32,
}};

const std::array<folly::StringPiece, 7> TStructDataStorage<::nebula::graph::cpp2::ExecutionResponse>::fields_names = {{
  "error_code",
  "latency_in_us",
  "data",
  "space_name",
  "error_msg",
  "plan_desc",
  "comment",
}};
const std::array<int16_t, 7> TStructDataStorage<::nebula::graph::cpp2::ExecutionResponse>::fields_ids = {{
  1,
  2,
  3,
  4,
  5,
  6,
  7,
}};
const std::array<protocol::TType, 7> TStructDataStorage<::nebula::graph::cpp2::ExecutionResponse>::fields_types = {{
  TType::T_I32,
  TType::T_I64,
  TType::T_STRUCT,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_STRUCT,
  TType::T_STRING,
}};

const std::array<folly::StringPiece, 5> TStructDataStorage<::nebula::graph::cpp2::AuthResponse>::fields_names = {{
  "error_code",
  "error_msg",
  "session_id",
  "time_zone_offset_seconds",
  "time_zone_name",
}};
const std::array<int16_t, 5> TStructDataStorage<::nebula::graph::cpp2::AuthResponse>::fields_ids = {{
  1,
  2,
  3,
  4,
  5,
}};
const std::array<protocol::TType, 5> TStructDataStorage<::nebula::graph::cpp2::AuthResponse>::fields_types = {{
  TType::T_I32,
  TType::T_STRING,
  TType::T_I64,
  TType::T_I32,
  TType::T_STRING,
}};

const std::array<folly::StringPiece, 2> TStructDataStorage<::nebula::graph::cpp2::VerifyClientVersionResp>::fields_names = {{
  "error_code",
  "error_msg",
}};
const std::array<int16_t, 2> TStructDataStorage<::nebula::graph::cpp2::VerifyClientVersionResp>::fields_ids = {{
  1,
  2,
}};
const std::array<protocol::TType, 2> TStructDataStorage<::nebula::graph::cpp2::VerifyClientVersionResp>::fields_types = {{
  TType::T_I32,
  TType::T_STRING,
}};

const std::array<folly::StringPiece, 1> TStructDataStorage<::nebula::graph::cpp2::VerifyClientVersionReq>::fields_names = {{
  "version",
}};
const std::array<int16_t, 1> TStructDataStorage<::nebula::graph::cpp2::VerifyClientVersionReq>::fields_ids = {{
  1,
}};
const std::array<protocol::TType, 1> TStructDataStorage<::nebula::graph::cpp2::VerifyClientVersionReq>::fields_types = {{
  TType::T_STRING,
}};

} // namespace thrift
} // namespace apache
